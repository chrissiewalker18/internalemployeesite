

var _mag = _mag || {};

(function() {
  var analytics;
  var $;
  var jquery = {
    minVersion: {
      'major': 1,
      'stable': 8,
      'patch': 1
    },
    src: '//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js'
  };
  var ChicoryButton;
  
  var links = [
    {
      href: 'https://chicory-static-prod.s3.amazonaws.com/static/widget_v2/css/iframe.117df1b0b25e.css',
      rel: 'stylesheet',
      type: 'text/css'
    },
    {
      href: '//fonts.googleapis.com/css?family=Open+Sans:400,600,700',
      rel: 'stylesheet',
      type: 'text/css'
    }
  ];
  var scripts = [
    'https://chicory-static-prod.s3.amazonaws.com/static/widget_v2/js/noframework.waypoints.min.febac1a87414.js',
    '//chicoryapp.com/widget_v2/analytics_js/'
  ];

  // Checking for mobile browsers, regex courtesy of Chad Smith at http://detectmobilebrowsers.com/.
  function mobileCheck() {
    var check = false;
    (function(a,b){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
    return check;
  }

  quantcast();

  addMessageListener();

  var ieVersion = (navigator.userAgent.indexOf('MSIE') > -1) ? parseInt(navigator.userAgent.toLowerCase().split('msie')[1]) : false;
  var isMobile = mobileCheck();

  // Amplitude.
  (function(e,t){var r=e.amplitude||{};var n=t.createElement("script");n.type="text/javascript";
    n.async=true;n.src="//d24n15hnbwhuhn.cloudfront.net/libs/amplitude-2.2.0-min.gz.js";
    var s=t.getElementsByTagName("script")[0];s.parentNode.insertBefore(n,s);r._q=[];
    function a(e){r[e]=function(){r._q.push([e].concat(Array.prototype.slice.call(arguments,0)))
    }}var i=["init","logEvent","setUserId","setUserProperties","setOptOut","setVersionName","setDomain","setDeviceId","setGlobalUserProperties"];
    for(var o=0;o<i.length;o++){a(i[o])}e.amplitude=r})(window,document);

  amplitude.init('0b20d7087fabca7b359239c830ec1f42', null, {
    includeUtm: true
  });
  // end Amplitude.
  
  function addMessageListener() {
    // Create event handler compatible with IE and others.
    var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
    var eventer = window[eventMethod];
    var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";

    // Listen for a message from the iframe window.
    eventer(messageEvent, function(message) {
      if (!message.origin.match(/chicoryapp.com/)) return;

      var messageComponents = message.data.split('|');
      if (messageComponents[0] == "Close modal") {
        closeModal();
      }
    }, false);
  }

  function closeModal() {
    $('.chicory-bg').remove();
  }

  function sitescout() {
    var source = '//pixel.sitescout.com/iap/4b6920b8c3b2bdb5';
    new Image().src = source;
  }
  
  function simplifi(params) {
    var baseUrl = window.location.href;
    var expandedUrl = baseUrl + "?q=" + serializeParamList(params, '+') + ';';
    var source = "http://i.simpli.fi/dpx.js?cid=26478&m=1&sifi_tuid=10811&api_referrer=" + encodeURI(expandedUrl);
    injectScript(source);
  }
  
  function magnetic(params) {
    _mag.kw = serializeParamList(params, ',').replace(/_/g, ' ');
    _mag.shortName = 'chicory';
    _mag.default_protocol = ('https:' == document.location.protocol ? 'https:' : 'http:');
    _mag.startTime = (new Date()).getTime();
    var source = _mag.default_protocol + '//d3ezl4ajpp2zy8.cloudfront.net/chicory_tag.js';
    injectScript(source);
  }

  function quantcast() {
    window._qevents = window._qevents || [];
    window._qevents.push({
      qacct:"p-5BE5Fp6_qyVGp"
    });
    source = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    injectScript(source);
  }

  function serializeParamList(params, joiner) {
    var str = [];
    $.each(params, function(index, value) {
      str.push(value);
    });
    return str.join(joiner);
  }
  
  function injectScript(source) {
    var newScript = document.createElement("script");
    newScript.type = "text/javascript";
    newScript.async = true;
    newScript.src = source;
    var firstScript = document.getElementsByTagName("script")[0];
    firstScript.parentNode.insertBefore(newScript, firstScript);
  }
  
  function addUnloadListener() {
    $(window).on("unload", function() {
      $.each(ChicoryButton.extendedRecipeData, function(recipeId, recipeProperties) {
        // Amplitude
        amplitude.logEvent('window_closed', recipeProperties);
        
        // DMP
        analytics.logEvent('close_window', {}, false);
      });
    });
  }

  function sendRetargetingData(data) {
    var magneticData = data.categories.concat(data.publisher_tags);
    var retargetingData = magneticData.concat(data.brands).concat(data.ingredients);

    magnetic(magneticData.concat(['recipe', 'food', 'grocery']));
    simplifi(retargetingData);

    if ($.inArray('Canned & Dried Tomatoes', data.categories) > -1) {
      sitescout();
    }
  }

  function findRecipeId($button) {
    var recipeId = $button.data('recipe-id');
    while (!recipeId) {
      $button = $button.parent();
      recipeId = $button.data('recipe-id');
    }
    return recipeId;
  }
  
  function findRecipeProperties(recipeId) {
    return ChicoryButton.extendedRecipeData[recipeId];
  }

  function saveReusableProperties(data) {
    var properties = {
      'recipe_id': data.recipe_id,
      'recipe_name': data.recipe_name,
      'recipe_source': data.recipe_source,
      'ingredient_count': data.ingredient_count,
      'ingredients': JSON.stringify(data.ingredients),
      'categories': JSON.stringify(data.categories),
      'brands': JSON.stringify(data.brands),
      'publisher_tags': JSON.stringify(data.publisher_tags),
      'button_style': data.button_style,
      'button_copy': data.button_copy
    };

    for (i = 0; i < data.ingredients.length; i++) {
      properties["ingredient" + (i + 1)] = data.ingredients[i]
    }
    for (i = 0; i < data.brands.length; i++) {
      properties["brand" + (i + 1)] = data.brands[i]
    }
    for (i = 0; i < data.categories.length; i++) {
      properties["category" + (i + 1)] = data.categories[i]
    }
    for (i = 0; i < data.publisher_tags.length; i++) {
      properties["publisher_tag" + (i + 1)] = data.publisher_tags[i]
    }

    ChicoryButton.extendedRecipeData = ChicoryButton.extendedRecipeData || {};
    ChicoryButton.extendedRecipeData[data.recipe_id] = properties;
  }

  function logChicoryButtonViewed($button) {
    var recipeId = findRecipeId($button);
    var recipeProperties = findRecipeProperties(recipeId);

    // Amplitude
    amplitude.logEvent('view_widget_button', recipeProperties);
    
    // DMP
    analytics.logEvent('view_button');
  }

  function logPrintButtonClicked($button) {
    var recipeId = findRecipeId($button);
    var recipeProperties = findRecipeProperties(recipeId);

    amplitude.logEvent('click_print_button', recipeProperties);

    // DMP
    analytics.logEvent('click_print_button');
  }

  function logIngredientsViewed($button) {
    var recipeId = findRecipeId($button);
    var recipeProperties = findRecipeProperties(recipeId);

    // Amplitude
    amplitude.logEvent('view_ingredients', recipeProperties);
    
    // DMP
    //analytics.logEvent('view_ingredients');
  }

  function logChicoryButtonClicked($button) {
    var recipeId = findRecipeId($button);
    var recipeProperties = findRecipeProperties(recipeId);
    recipeProperties['correlation_id'] = 'b91c8a0b-45c5-424b-98cc-30e26d46b850';

    // Amplitude
    amplitude.logEvent('click_widget_button', recipeProperties);
    
    // DMP
    analytics.logEvent('click_button', {'correlation_id': 'b91c8a0b-45c5-424b-98cc-30e26d46b850'});
  }

  function loadJQuery(initCallback) {
    if (window.jQuery === undefined || !jQueryCompatible(window.jQuery().jquery.split('.'))) {
      var $script = document.createElement('script');
      $script.src = jquery.src;
      $script.type = "text/javascript";
      $script.onload = function() {
        $ = window.jQuery;
        $.noConflict(true);
        $.ajaxSetup({
          cache: false
        });
        jQueryXDomainPatch($);
        initCallback();
      };
      document.body.appendChild($script);
    }
    else {
      $ = window.jQuery;
      $.ajaxSetup({
        cache: false
      });
      jQueryXDomainPatch($);
      initCallback();
    }
  }

  function jQueryCompatible(version) {
    var major = parseInt(version[0]);
    var stable = parseInt(version[1]);
    var patch = parseInt(version[2]);
    if (major != jquery.minVersion.major) {
      return false;
    }
    else if (stable >= jquery.minVersion.stable) {
      return patch >= jquery.minVersion.patch;
    }
    else {
      return false;
    }
  }

  function jQueryXDomainPatch(jQuery) {
    if ( window.XDomainRequest ) {
      jQuery.ajaxTransport(function( s ) {
        if ( s.crossDomain && s.async ) {
          if ( s.timeout ) {
            s.xdrTimeout = s.timeout;
            delete s.timeout;
          }
          var xdr;
          return {
            send: function( _, complete ) {
              function callback( status, statusText, responses, responseHeaders ) {
                xdr.onload = xdr.onerror = xdr.ontimeout = jQuery.noop;
                xdr = undefined;
                complete( status, statusText, responses, responseHeaders );
              }
              xdr = new window.XDomainRequest();
              xdr.onload = function() {
                callback( 200, "OK", { text: xdr.responseText }, "Content-Type: " + xdr.contentType );
              };
              xdr.onerror = function() {
                callback( 404, "Not Found" );
              };
              xdr.onprogress = function() {};
              if ( s.xdrTimeout ) {
                xdr.ontimeout = function() {
                  callback( 0, "timeout" );
                };
                xdr.timeout = s.xdrTimeout;
              }

              xdr.open( s.type, s.url, true );
              xdr.send( ( s.hasContent && s.data ) || null );
            },
            abort: function() {
              if ( xdr ) {
                xdr.onerror = jQuery.noop();
                xdr.abort();
              }
            }
          };
        }
      });
    }
  }

  var BUTTON_LOCATION = {
    BELOW_INGREDIENTS : 'below-ingredient',
    BELOW_RECIPE      : 'below-recipe',
    BELOW_POST        : 'below-post'
  };

  var AD_LOCATION = {
    BELOW_INGREDIENT  : 'below-ingredient',
    BELOW_INGREDIENTS : 'below-ingredients',
    BELOW_RECIPE      : 'below-recipe',
    ABOVE_BUTTON      : 'above-button',
    NONE              : 'none'
  };

  ChicoryButton = function(uuid, experiments, exclude_from_programmatic) {
    var self = this;
    self.uuid = uuid;
    self.experiments = experiments;
    self.exclude_from_programmatic = exclude_from_programmatic;

    if (!self.exclude_from_programmatic) {
      // AppNexus/Progmechs cookie sync
      $.ajax({
        type: 'GET',
        url: 'http://ib.adnxs.com/getuid?http://ad.adserver.com/pixel?id=234123&adnxs_uid=$UID',
        dataType: "script",
        cache: true
      });
    }

    // Inject script dependencies
    self.injectDependencies().done(function() {
      addUnloadListener();
      // Instantiate our analytics wrapper, bound to our 'global' scope.
      analytics = new ChicoryAnalytics($, true, function() {
        if (!self.exclude_from_programmatic) {
          this.cookieSync(
            'http://ib.adnxs.com/getuid?[ENDPOINT]'
              + 'sync?uuid=[UUID]'
              + '&external_reference=appnexus'
              + '&external_id=$UID'
              + '&jsonp=jQuery.noop'
          );
          this.cookieSync(
            'http://bcp.crwdcntrl.net/5/c=6948/pe=y?[ENDPOINT]'
              + 'sync?uuid=[UUID]'
              + '&external_reference=lotame'
              + '&external_id=${profile_id}'
              + '&jsonp=jQuery.noop'
          );
        }
      });

      self.injectButtons('');
    });
  };

  ChicoryButton.prototype.injectDependencies = function() {
    var self = this;

    var deferreds = [];
    scripts.forEach(function(script) {
      deferreds.push(
        $.ajax({
          type: 'GET',
          url: script,
          dataType: "script",
          cache: true
        })
      );
    });

    return $.when.apply($, deferreds);
  };

  ChicoryButton.prototype.injectButtons = function(location) {
    var self = this;

    // An auto placement location was requested.
    if (location) self.injectContainer(location);

    // Check that the button is present
    var $containers = $('div.chicory-order-ingredients');
    if (!$containers.length) return;

    $containers.each(function() {
      var data = {};
      var $container = $(this);
      var recipeId = $container.data('recipe-id');
      var publicId = $container.data('public-id');

      if (recipeId) {
        data.recipe_id = recipeId;
      }
      else if (publicId) {
        data.public_id = publicId;
      }
      else {
        data.source_uri = window.location.href;
      }
      self.lookupRecipe($container, data)
    });
  };

  ChicoryButton.prototype.lookupRecipe = function($container, data) {
    var self = this;
    self.ajax('//chicoryapp.com/widget_v2/recipe/lookup/', {
      type: 'GET',
      data: data
    })
    .done(function(res) {
      var data = res.response;

      // Something went wrong
      if (res.status != 'ok' || $.isEmptyObject(data) || !data.published_recipe || !data.live_state) {
        $container.replaceWith('');
        return;
      }

      var $button = $container.find('[data-js="chicory-button"]');

      var deferred = {};

      // Button not pre-loaded
      if (!$button.length) {
        deferred = self.ajax('//chicoryapp.com/widget_v2/partials/button.html').done(function(html) {
          var $html = $(html);
          $container.append($html);
          $button = $container.find('[data-js="chicory-button"]');
        });
      }

      $.when(deferred).done(function() {
        // Hide button on mobile and IE10 and below
        if (isMobile || ieVersion) {
          $button.css('cssText', 'display: none !important');
        }

        $button.attr('data-recipe-id', data.recipe_id);
        
        // Button is good to go
        self.onLoad($button, data);
        $button.click(function(e) {
          e.preventDefault();
          self.onClick($button, data.recipe_id);
        });
      });
    });
  };

  ChicoryButton.prototype.lookupAdCampaign = function($button) {
    var self = this;
    var recipe_id = findRecipeId($button);
    var recipe_properties = findRecipeProperties(recipe_id);

    self.ajax('//chicoryapp.com/widget_v2/ad_campaign/lookup/', {
      type: 'GET',
      data: {
        recipe_id: recipe_id,
        publisher: document.referrer
      }
    })
    .done(function(res) {
      var data = res.response;

      if (res.status != 'ok' || $.isEmptyObject(data)) {
        return;
      }

      $.each(data.ad_campaigns, function(source_text, ad_campaign) {
        var $ad_campaign = $(ad_campaign.html);
        delete ad_campaign.html;

        var placement = self.injectAdCampaign($button, source_text, $ad_campaign, data.location, !data.location);

        // bind event listeners
        if (placement && (placement != AD_LOCATION.NONE)) {
          // track that the ad campaign was loaded.
          amplitude.logEvent('load_campaign', $.extend({}, recipe_properties, ad_campaign));
          analytics.logEvent('load_campaign', {ad_campaign_id: ad_campaign.id});

          // track when the ad campaign is scrolled to.
          new Waypoint({
            element: $ad_campaign.get(0),
            handler: function(direction) {
              if (direction === 'down') {
                amplitude.logEvent('view_campaign', $.extend({}, recipe_properties, ad_campaign));
                analytics.logEvent('view_campaign', {ad_campaign_id: ad_campaign.id});
              }
            },
            offset: 'bottom-in-view',
            triggerOnce: true
          });

          // track when the ad campaign is clicked.
          $ad_campaign.on('click', function(e) {
            e.preventDefault();

            amplitude.logEvent('click_campaign', $.extend({}, recipe_properties, ad_campaign));
            analytics.logEvent('click_campaign', {ad_campaign_id: ad_campaign.id});

            window.open(ad_campaign.target_url, '_blank');
          });
        }

        // stop adding more campaigns if we have added a campaign anywhere but below the ingredient line
        if (!$.inArray(placement, [AD_LOCATION.BELOW_INGREDIENT, AD_LOCATION.NONE])) return false;
      });
    });
  };

  ChicoryButton.prototype.injectAdCampaign = function($button, source_text, $ad_campaign, location, allow_fallback) {
    var self = this;
    var r = self.getRecipeStructure();
    var $ingredient_line = $("*:contains('" + source_text + "'):last");

    switch (location) {
      case AD_LOCATION.BELOW_INGREDIENT:
        // fallback to above button
        if (allow_fallback && !$ingredient_line.length) {
          return self.injectAdCampaign($button, source_text, $ad_campaign, AD_LOCATION.ABOVE_BUTTON, true);
        }

        $ingredient_line.append($ad_campaign);
        return AD_LOCATION.BELOW_INGREDIENT;

      case AD_LOCATION.ABOVE_BUTTON:
        // fallback to below ingredient list
        if (allow_fallback && !$button.length) {
          return self.injectAdCampaign($button, source_text, $ad_campaign, AD_LOCATION.BELOW_INGREDIENTS, true);
        }

        $button.before($ad_campaign);
        return AD_LOCATION.ABOVE_BUTTON;

      case AD_LOCATION.BELOW_INGREDIENTS:
        // fallback to below recipe
        if (allow_fallback && !r || !r.ingredients) {
          return self.injectAdCampaign($button, source_text, $ad_campaign, AD_LOCATION.BELOW_RECIPE, true);
        }

        r.ingredients.append($ad_campaign);
        return AD_LOCATION.BELOW_INGREDIENTS;

      case AD_LOCATION.BELOW_RECIPE:
        // fallback to none
        if (allow_fallback && !r || !r.ingredients) {
          return self.injectAdCampaign($button, source_text, $ad_campaign, AD_LOCATION.NONE, true);
        }

        r.recipe.append($ad_campaign);
        return AD_LOCATION.BELOW_RECIPE;

      case AD_LOCATION.NONE:
        // do nothing
        return AD_LOCATION.NONE;

      default:
        // default to below ingredient
        return self.injectAdCampaign($button, source_text, $ad_campaign, AD_LOCATION.BELOW_INGREDIENT, true);
    }
  };

  ChicoryButton.prototype.injectContainer = function(location) {
    var self = this;
    var post = $('.entry-content, .post-content, .post_content, .post_article').first();
    var button = $('<div class="chicory-order-ingredients"></div>');
    var r = self.getRecipeStructure();

    // Check that location is a valid value, if not default to below ingredient
    if ($.inArray(location, $.map(BUTTON_LOCATION, function(v) {return v})) == -1) {
      location = BUTTON_LOCATION.BELOW_INGREDIENTS;
    }

    // failed to detected recipe structure, so only valid placement is below post
    if (!r) {
      location = BUTTON_LOCATION.BELOW_POST
    }
    // Cant detect ingredient section so the only valid placement is below recipe
    else if ((location != BUTTON_LOCATION.BELOW_POST) && !r.ingredients.length) {
      location = BUTTON_LOCATION.BELOW_RECIPE
    }

    switch (location) {
      case BUTTON_LOCATION.BELOW_INGREDIENTS:
        r.ingredients.append(button);
        break;

      case BUTTON_LOCATION.BELOW_RECIPE:
        r.recipe.append(button);
        break;

      case BUTTON_LOCATION.BELOW_POST:
        post.append(button);
        break;
    }
  };

  ChicoryButton.prototype.getRecipeStructure = function() {
    var self = this;
    var recipe, ingredients;

    // microdata format
    recipe = $('[itemtype*="//schema.org/Recipe"]').first();
    if (recipe.length) {
      ingredients = recipe.find('[itemprop="ingredients"]').parent().last();
      return {recipe: recipe, ingredients: ingredients};
    }

    // hrecipe format
    recipe = $('.hrecipe').first();
    if (recipe.length) {
      ingredients = recipe.find('.ingredient').parent().last();
      return {recipe: recipe, ingredients: ingredients};
    }

    // myrecipes.com format
    ingredients = $('.field-ingredients').parent().last();
    if (ingredients.length) {
      return {recipe: null, ingredients: ingredients}
    }
  };

  ChicoryButton.prototype.injectIframe = function($button) {
    var self = this;
    self.ajax('//chicoryapp.com/widget_v2/partials/iframe.html', {
      type: 'GET',
      data: {
        recipe_id: $button.data('recipe-id')
      }
    }).done(function(html) {
      // Callback with rendered html to build the iframe.
      var $iframe = $(html);
      $('body').append($iframe);
      $('#chicory').removeClass('chicory-disabled').addClass('chicory-active');

      // Handle background window scrolling when bounds of the modal
      // window have been reached.
      $('#chicory-iframe').on('mouseover', function() {
        document.body.style.overflow='hidden';
      });
    });
  };

  ChicoryButton.prototype.onLoad = function($button, data) {
    var self = this;
    var r = self.getRecipeStructure();
    var $ingredients = r && r.ingredients ? r.ingredients : $button;
    
    data.button_copy = self.experiments.button_copy;
    data.button_style = self.experiments.button_style;

    // Programmatic Retargeting Data
    if (!self.exclude_from_programmatic) {
      sendRetargetingData(data);
    }

    saveReusableProperties(data);

    var recipeId = data.recipe_id;
    var recipeProperties = findRecipeProperties(recipeId);

    // Cache analytics data that will be reused.
    analytics.setDeviceProperties({
      "button_style": recipeProperties.button_style,
      "button_copy": recipeProperties.button_copy
    });
    analytics.setFunnelProperties({
      "recipe_id": recipeId
    });

    // Amplitude
    amplitude.logEvent('widget_button_loaded', recipeProperties);

    // DMP
    //analytics.logEvent('load_button');

    // Track when the button is scrolled to.
    new Waypoint({
      element: $button.get(0),
      handler: function(direction) {
        if (direction === 'down') {
          logChicoryButtonViewed($button);
        }
      },
      offset: 'bottom-in-view',
      triggerOnce: true
    });

    // Track when the ingredients are scrolled to.
    new Waypoint({
      element: $ingredients.get(0),
      handler: function(direction) {
        if (direction === 'down') {
          logIngredientsViewed($button);
        }
      },
      offset: 'bottom-in-view',
      triggerOnce: true
    });

    // Send event when print button is clicked
    $('.ERSPrintBtn, .wpurp-recipe-print-button, .zlrecipe-print-link, .yrecipe-print-link .blog-yumprint-print').click(function() {
      logPrintButtonClicked($button);
    });

    self.lookupAdCampaign($button);
  };

  ChicoryButton.prototype.onClick = function($button, recipeId) {
    var self = this;

    // Amplitude.
    logChicoryButtonClicked($button);
    // end Amplitude..
    
    // Add the recipe to the smartcart
    self.ajax('//chicoryapp.com/widget_v2/recipe/add/', {
      type: 'GET',
      data: {
        recipe_id: recipeId
      }
    })
    .done(function() {
      self.injectIframe($button);
    });
  };

  ChicoryButton.prototype.ajax = function(url, options) {
    var self = this;
    return $.ajax(url, $.extend({
      headers: {
        'X-Session': self.uuid,
        'X-Json': JSON.stringify(self.experiments)
      }
    }, options));
  };

  loadJQuery(function() {
    // Load styles
    var $head = $('head');
    links.forEach(function(link) {
      var $link = $('<link></link>', link);
      $head.append($link);
    });

    // Check that the button is present
    var $containers = $('div.chicory-order-ingredients');
    var buttonTheme = $containers.data('theme');
    var buttonCTA = $containers.data('cta');

    if ($containers.length) {
      if (buttonTheme || buttonCTA) {
        $.ajax('//chicoryapp.com/widget_v2/partials/button.html', {
          type: 'GET',
          data: {
            button_theme: buttonTheme,
            button_cta: buttonCTA
          }
        })
        .done(function(html) {
          $containers.each(function() {
            var $container = $(this);
            var $button = $(html);
            // Hide button on mobile and IE10 and below
            if (isMobile || ieVersion) {
              $button.css('cssText', 'display: none !important')
            }
            $container.append($button);
          });
        });
      }
    }

    // Init session
    var sessionIframe = document.createElement("iframe");
    sessionIframe.src = '//chicoryapp.com/widget_v2/session_js';
    sessionIframe.id = 'session-frame';
    sessionIframe.setAttribute('frameborder', 0);
    sessionIframe.setAttribute('style', 'height: 1px; width: 1px;');
    document.body.appendChild(sessionIframe);

    window.addEventListener("message", function(event) {
      // filter out messages from other windows
      if (event.source != sessionIframe.contentWindow) return;

      var data = JSON.parse(event.data);
      
      new ChicoryButton(data.uuid, data.experiments, data.exclude_from_programmatic)
    });
  });
})();
